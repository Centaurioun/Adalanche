// Code generated by "enumer -type=PwnMethod -trimprefix=Pwn -json"; DO NOT EDIT.

//
package main

import (
	"encoding/json"
	"fmt"
)

const _PwnMethodName = "CreateUserCreateGroupCreateComputerCreateAnyObjectDeleteChildrenTargetDeleteObjectInheritsSecurityACLContainsDenyResetPasswordOwnsGenericAllWriteAllWritePropertyAllWriteExtendedAllTakeOwnershipWriteDACLWriteSPNWriteValidatedSPNWriteAllowedToActAddMemberAddMemberGroupAttrAddSelfMemberReadMSAPasswordHasMSAWriteKeyCredentialLinkWriteAttributeSecurityGUIDSIDHistoryEqualityAllExtendedRightsDCReplicationGetChangesDCReplicationSyncronizeDSReplicationGetChangesAllReadLAPSPasswordMemberOfGroupHasSPNHasSPNNoPreauthAdminSDHolderOverwriteACLComputerAffectedByGPOGPOMachineConfigPartOfGPOGPOUserConfigPartOfGPOLocalAdminRightsLocalRDPRightsLocalDCOMRightsLocalSMSAdminsLocalSessionLastDayLocalSessionLastWeekLocalSessionLastMonthHasServiceAccountCredentialsHasAutoAdminLogonCredentialsScheduledTaskOnUNCPathMachineScriptWriteAltSecurityIdentitiesWriteProfilePathWriteScriptPathCertificateEnrollRunsExecutableHostsRunsAsExecuted"

var _PwnMethodIndex = [...]uint16{0, 10, 21, 35, 50, 70, 82, 98, 113, 126, 130, 140, 148, 164, 180, 193, 202, 210, 227, 244, 253, 271, 284, 299, 305, 327, 353, 371, 388, 411, 434, 460, 476, 489, 495, 510, 535, 556, 581, 603, 619, 633, 648, 662, 681, 701, 722, 750, 778, 800, 813, 839, 855, 870, 887, 901, 906, 912, 920}

func (i PwnMethod) String() string {
	i -= 1
	if i < 0 || i >= PwnMethod(len(_PwnMethodIndex)-1) {
		return fmt.Sprintf("PwnMethod(%d)", i+1)
	}
	return _PwnMethodName[_PwnMethodIndex[i]:_PwnMethodIndex[i+1]]
}

var _PwnMethodValues = []PwnMethod{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58}

var _PwnMethodNameToValueMap = map[string]PwnMethod{
	_PwnMethodName[0:10]:    1,
	_PwnMethodName[10:21]:   2,
	_PwnMethodName[21:35]:   3,
	_PwnMethodName[35:50]:   4,
	_PwnMethodName[50:70]:   5,
	_PwnMethodName[70:82]:   6,
	_PwnMethodName[82:98]:   7,
	_PwnMethodName[98:113]:  8,
	_PwnMethodName[113:126]: 9,
	_PwnMethodName[126:130]: 10,
	_PwnMethodName[130:140]: 11,
	_PwnMethodName[140:148]: 12,
	_PwnMethodName[148:164]: 13,
	_PwnMethodName[164:180]: 14,
	_PwnMethodName[180:193]: 15,
	_PwnMethodName[193:202]: 16,
	_PwnMethodName[202:210]: 17,
	_PwnMethodName[210:227]: 18,
	_PwnMethodName[227:244]: 19,
	_PwnMethodName[244:253]: 20,
	_PwnMethodName[253:271]: 21,
	_PwnMethodName[271:284]: 22,
	_PwnMethodName[284:299]: 23,
	_PwnMethodName[299:305]: 24,
	_PwnMethodName[305:327]: 25,
	_PwnMethodName[327:353]: 26,
	_PwnMethodName[353:371]: 27,
	_PwnMethodName[371:388]: 28,
	_PwnMethodName[388:411]: 29,
	_PwnMethodName[411:434]: 30,
	_PwnMethodName[434:460]: 31,
	_PwnMethodName[460:476]: 32,
	_PwnMethodName[476:489]: 33,
	_PwnMethodName[489:495]: 34,
	_PwnMethodName[495:510]: 35,
	_PwnMethodName[510:535]: 36,
	_PwnMethodName[535:556]: 37,
	_PwnMethodName[556:581]: 38,
	_PwnMethodName[581:603]: 39,
	_PwnMethodName[603:619]: 40,
	_PwnMethodName[619:633]: 41,
	_PwnMethodName[633:648]: 42,
	_PwnMethodName[648:662]: 43,
	_PwnMethodName[662:681]: 44,
	_PwnMethodName[681:701]: 45,
	_PwnMethodName[701:722]: 46,
	_PwnMethodName[722:750]: 47,
	_PwnMethodName[750:778]: 48,
	_PwnMethodName[778:800]: 49,
	_PwnMethodName[800:813]: 50,
	_PwnMethodName[813:839]: 51,
	_PwnMethodName[839:855]: 52,
	_PwnMethodName[855:870]: 53,
	_PwnMethodName[870:887]: 54,
	_PwnMethodName[887:901]: 55,
	_PwnMethodName[901:906]: 56,
	_PwnMethodName[906:912]: 57,
	_PwnMethodName[912:920]: 58,
}

// PwnMethodString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PwnMethodString(s string) (PwnMethod, error) {
	if val, ok := _PwnMethodNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PwnMethod values", s)
}

// PwnMethodValues returns all values of the enum
func PwnMethodValues() []PwnMethod {
	return _PwnMethodValues
}

// IsAPwnMethod returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PwnMethod) IsAPwnMethod() bool {
	for _, v := range _PwnMethodValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for PwnMethod
func (i PwnMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for PwnMethod
func (i *PwnMethod) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("PwnMethod should be a string, got %s", data)
	}

	var err error
	*i, err = PwnMethodString(s)
	return err
}
